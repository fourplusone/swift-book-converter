{"hierarchy":{"paths":[["doc:\/\/com.apple.Swift\/documentation\/Swift"]]},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.apple.Swift\/documentation\/Swift\/AboutTheLanguageReference","doc:\/\/com.apple.Swift\/documentation\/Swift\/LexicalStructure","doc:\/\/com.apple.Swift\/documentation\/Swift\/Types","doc:\/\/com.apple.Swift\/documentation\/Swift\/Expressions","doc:\/\/com.apple.Swift\/documentation\/Swift\/Statements","doc:\/\/com.apple.Swift\/documentation\/Swift\/Declarations","doc:\/\/com.apple.Swift\/documentation\/Swift\/Attributes","doc:\/\/com.apple.Swift\/documentation\/Swift\/Patterns","doc:\/\/com.apple.Swift\/documentation\/Swift\/GenericParametersAndArguments"],"title":"Language Reference"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.apple.Swift\/documentation\/Swift\/zzSummaryOfTheGrammar"},"metadata":{"role":"article","modules":[{"name":"Swift"}],"title":"Summary of the Grammar","roleHeading":"Article"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Lexical Structure","level":2,"anchor":"Lexical-Structure"},{"type":"aside","name":"Grammar of whitespace","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"style":"note"},{"type":"aside","name":"Grammar of an identifier","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"style":"note"},{"type":"aside","name":"Grammar of a literal","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"style":"note"},{"type":"aside","name":"Grammar of an integer literal","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"style":"note"},{"type":"aside","name":"Grammar of a floating-point literal","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"style":"note"},{"type":"aside","name":"Grammar of a string literal","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"style":"note"},{"type":"aside","name":"Grammar of a regular expression literal","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"style":"note"},{"type":"aside","name":"Grammar of operators","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"style":"note"},{"level":2,"anchor":"Types","text":"Types","type":"heading"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a type","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a type annotation","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of a type identifier","type":"aside","style":"note"},{"name":"Grammar of a tuple type","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"},{"name":"Grammar of a function type","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"style":"note","type":"aside"},{"name":"Grammar of an array type","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"style":"note","type":"aside"},{"name":"Grammar of a dictionary type","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"style":"note","type":"aside"},{"name":"Grammar of an optional type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"style":"note","type":"aside"},{"name":"Grammar of an implicitly unwrapped optional type","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"style":"note","type":"aside"},{"name":"Grammar of a protocol composition type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"style":"note","type":"aside"},{"name":"Grammar of an opaque type","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"},{"name":"Grammar of a metatype type","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"},{"name":"Grammar of an Any type","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"style":"note","type":"aside"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"style":"note","name":"Grammar of a Self type"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"style":"note","name":"Grammar of a type inheritance clause"},{"type":"heading","text":"Expressions","anchor":"Expressions","level":2},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"style":"note","name":"Grammar of an expression"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"style":"note","name":"Grammar of a prefix expression"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"style":"note","name":"Grammar of an in-out expression"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"style":"note","name":"Grammar of a try expression"},{"type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"style":"note","name":"Grammar of an await expression"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of an infix expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of an assignment operator","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of a conditional operator","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a type-casting operator","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a primary expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of a literal expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a self expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a superclass expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a closure expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a implicit member expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a parenthesized expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a tuple expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"name":"Grammar of a wildcard expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a key-path expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a selector expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a key-path string expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of a postfix expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a function call expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of an initializer expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of an explicit member expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a postfix self expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a subscript expression","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"name":"Grammar of a forced-value expression","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of an optional-chaining expression","type":"aside","style":"note"},{"text":"Statements","type":"heading","level":2,"anchor":"Statements"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a loop statement","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of a for-in statement","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a while statement","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of a repeat-while statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a branch statement","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of an if statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a guard statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"name":"Grammar of a switch statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a labeled statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a control transfer statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"name":"Grammar of a break statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"name":"Grammar of a continue statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"name":"Grammar of a fallthrough statement","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}],"name":"Grammar of a return statement","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of a throw statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a defer statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a do statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"name":"Grammar of a compiler control statement","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}],"name":"Grammar of a conditional compilation block","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}],"name":"Grammar of a line control statement","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"name":"Grammar of a compile-time diagnostic statement","type":"aside","style":"note"},{"style":"note","name":"Grammar of an availability condition","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"level":2,"type":"heading","text":"Declarations","anchor":"Declarations"},{"style":"note","name":"Grammar of a declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"style":"note","name":"Grammar of a top-level declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a code block","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Grammar of an import declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a constant declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a variable declaration","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]},{"style":"note","name":"Grammar of a type alias declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"style":"note","name":"Grammar of a function declaration","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]},{"style":"note","name":"Grammar of an enumeration declaration","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Grammar of a structure declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a class declaration","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Grammar of an actor declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a protocol declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"style":"note","name":"Grammar of a protocol property declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"style":"note","name":"Grammar of a protocol method declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"style":"note","name":"Grammar of a protocol initializer declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a protocol subscript declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a protocol associated type declaration","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]},{"style":"note","name":"Grammar of an initializer declaration","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Grammar of a deinitializer declaration","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Grammar of an extension declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a subscript declaration","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"style":"note","name":"Grammar of an operator declaration","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]},{"style":"note","name":"Grammar of a precedence group declaration","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Grammar of a declaration modifier","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"level":2,"type":"heading","text":"Attributes","anchor":"Attributes"},{"style":"note","name":"Grammar of an attribute","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]},{"level":2,"type":"heading","text":"Patterns","anchor":"Patterns"},{"style":"note","name":"Grammar of a pattern","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"style":"note","name":"Grammar of a wildcard pattern","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Grammar of an identifier pattern","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a value-binding pattern","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"style":"note","name":"Grammar of a tuple pattern","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]},{"style":"note","name":"Grammar of an enumeration case pattern","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]},{"style":"note","name":"Grammar of an optional pattern","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Grammar of a type casting pattern","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of an expression pattern","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]},{"level":2,"type":"heading","text":"Generic Parameters and Arguments","anchor":"Generic-Parameters-and-Arguments"},{"style":"note","name":"Grammar of a generic parameter clause","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]}]},{"style":"note","name":"Grammar of a generic argument clause","type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","variants":[{"paths":["\/documentation\/swift\/zzsummaryofthegrammar"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.apple.Swift/documentation/Swift/Types":{"type":"topic","title":"Types","abstract":[{"type":"text","text":"In Swift, there are two kinds of types: named types and compound types. A "},{"type":"emphasis","inlineContent":[{"text":"named type","type":"text"}]},{"type":"text","text":" is a type that can be given a particular name when it’s defined. Named types include classes, structures, enumerations, and protocols. For example, instances of a user-defined class named "},{"type":"codeVoice","code":"MyClass"},{"type":"text","text":" have the type "},{"type":"codeVoice","code":"MyClass"},{"type":"text","text":". In addition to user-defined named types, the Swift standard library defines many commonly used named types, including those that represent arrays, dictionaries, and optional values."}],"identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/Types","kind":"article","role":"article","url":"\/documentation\/swift\/types"},"doc://com.apple.Swift/documentation/Swift/Attributes":{"url":"\/documentation\/swift\/attributes","abstract":[{"type":"text","text":"There are two kinds of attributes in Swift—those that apply to declarations and those that apply to types. An attribute provides additional information about the declaration or type. For example, the "},{"type":"codeVoice","code":"discardableResult"},{"type":"text","text":" attribute on a function declaration indicates that, although the function returns a value, the compiler shouldn’t generate a warning if the return value is unused."}],"kind":"article","title":"Attributes","type":"topic","identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/Attributes","role":"article"},"doc://com.apple.Swift/documentation/Swift/Patterns":{"type":"topic","kind":"article","role":"article","title":"Patterns","url":"\/documentation\/swift\/patterns","identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/Patterns","abstract":[{"text":"A ","type":"text"},{"inlineContent":[{"text":"pattern","type":"text"}],"type":"emphasis"},{"text":" represents the structure of a single value or a composite value. For example, the structure of a tuple ","type":"text"},{"code":"(1, 2)","type":"codeVoice"},{"type":"text","text":" is a comma-separated list of two elements. Because patterns represent the structure of a value rather than any one particular value, you can match them with a variety of values. For instance, the pattern "},{"code":"(x, y)","type":"codeVoice"},{"type":"text","text":" matches the tuple "},{"code":"(1, 2)","type":"codeVoice"},{"type":"text","text":" and any other two-element tuple. In addition to matching a pattern with a value, you can extract part or all of a composite value and bind each part to a constant or variable name."}]},"doc://com.apple.Swift/documentation/Swift/LexicalStructure":{"url":"\/documentation\/swift\/lexicalstructure","abstract":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"text":"lexical structure","type":"text"}]},{"type":"text","text":" of Swift describes what sequence of characters form valid tokens of the language. These valid tokens form the lowest-level building blocks of the language and are used to describe the rest of the language in subsequent chapters. A token consists of an identifier, keyword, punctuation, literal, or operator."}],"kind":"article","title":"Lexical Structure","type":"topic","identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/LexicalStructure","role":"article"},"doc://com.apple.Swift/documentation/Swift/Statements":{"type":"topic","title":"Statements","abstract":[{"type":"text","text":"In Swift, there are three kinds of statements: simple statements, compiler control statements, and control flow statements. Simple statements are the most common and consist of either an expression or a declaration. Compiler control statements allow the program to change aspects of the compiler’s behavior and include a conditional compilation block and a line control statement."}],"identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/Statements","kind":"article","role":"article","url":"\/documentation\/swift\/statements"},"doc://com.apple.Swift/documentation/Swift/AboutTheLanguageReference":{"identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/AboutTheLanguageReference","abstract":[{"text":"This part of the book describes the formal grammar of the Swift programming language. The grammar described here is intended to help you understand the language in more detail, rather than to allow you to directly implement a parser or compiler.","type":"text"}],"kind":"article","title":"About the Language Reference","role":"article","type":"topic","url":"\/documentation\/swift\/aboutthelanguagereference"},"doc://com.apple.Swift/documentation/Swift/GenericParametersAndArguments":{"type":"topic","title":"Generic Parameters and Arguments","abstract":[{"type":"text","text":"This chapter describes parameters and arguments for generic types, functions, and initializers. When you declare a generic type, function, subscript, or initializer, you specify the type parameters that the generic type, function, or initializer can work with. These type parameters act as placeholders that are replaced by actual concrete type arguments when an instance of a generic type is created or a generic function or initializer is called."}],"identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/GenericParametersAndArguments","kind":"article","role":"article","url":"\/documentation\/swift\/genericparametersandarguments"},"doc://com.apple.Swift/documentation/Swift/Declarations":{"url":"\/documentation\/swift\/declarations","abstract":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"text":"declaration","type":"text"}]},{"type":"text","text":" introduces a new name or construct into your program. For example, you use declarations to introduce functions and methods, to introduce variables and constants, and to define enumeration, structure, class, and protocol types. You can also use a declaration to extend the behavior of an existing named type and to import symbols into your program that are declared elsewhere."}],"kind":"article","title":"Declarations","type":"topic","identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/Declarations","role":"article"},"doc://com.apple.Swift/documentation/Swift/Expressions":{"type":"topic","title":"Expressions","abstract":[{"type":"text","text":"In Swift, there are four kinds of expressions: prefix expressions, infix expressions, primary expressions, and postfix expressions. Evaluating an expression returns a value, causes a side effect, or both."}],"identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift\/Expressions","kind":"article","role":"article","url":"\/documentation\/swift\/expressions"},"doc://com.apple.Swift/documentation/Swift":{"kind":"symbol","identifier":"doc:\/\/com.apple.Swift\/documentation\/Swift","abstract":[],"type":"topic","title":"Swift","role":"collection","url":"\/documentation\/swift"}}}